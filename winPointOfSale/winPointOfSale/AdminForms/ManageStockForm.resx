<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIADZHwAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAH6BJ
        REFUeNrtnXuMXNd93z/n3juvfZJLcvk0RUqMZD0iR4rkSmGVSK3h2A1swXbKuI0ty3WctHAjx44sxkXS
        CkURxYnrJgoUwEgKy5ILOGySQlYMOIhRCZJtpoQsynqborgSxfdjdznvuY/z6x93llySO7OzO++d3wcY
        zJI7c+7ec8/v+zvnd875HVAURVEURVEURVEURVEURVEUZWViWlXQD144RinnMz45xOhomtGRDAnPxTH9
        XD1KPSqhcOycJbK1PxNFIZVSiXIhS6VUojBTJjWcZNf7rtcK7AG8Zr781IvH+Ox/eZL/82e7yKSTDI+k
        eOmVI0OZTHLcCq5W78pGGvqQINZKEPj+2ZPHs9fcdGvFL5f4+31T3HzrNvY++xof+8XrtDK7xLL8s4jw
        0uFZrLWsnRjh6InZobHR9HvS6dSdrjG3GsMNiYSXcRyDdgBWLo30AEQsURhGURjOGmNeCsPg+aBSejp7
        9vRrazddUS7mZnFSw2RmXuWuu+7SSu11Adj305NksyU2bVrN2TO5zPr14x9Ip5P3Jjx3p+OYNY5Rkx8U
        /FA4uogAXCYI1mKtPRkG/lOVcumbM6eOPb16clP55NQBRifW8ZFfvFYrtlcF4PVjWQqFCjfuWMtPj87c
        MDo89EAq4X3UdZ1hrcrBI4jgyGy0JAGYTxSF54JK+W/KhfxX1m3Z8saR118lNTTMB2/dppXbawLw+rEs
        UWS5bss4B08XPpxJJR9KJr3r1N8PsABYODoTEdrllyEihIG/v5zPfXnD9Rv+4Z3nDuJ4ST546xVawR3A
        aeRD/+/ACQqFCtdtGWfqbPnjw5nUX6bU+AeeVjx/YwyJZOqmzOjYX518/dRHtty6g3KxwN8+85pWcC8I
        gIiQzRe5ecdaDp4ufCid8v404bmTWnWKSOvK8hLJLemhkYdPvHzi/duuvZbc7FmklRdQFmRREX/x8Aye
        62Ct3LBqbGhPKulplEYBlhcEXIzAr+wvzE7/mnG9N3w/5MP/bKtWdBup2wN46sVjiBWmZ/JDYyOZ3Uk1
        fmUe7fDPXiJ5U3pk7P7p48dSRiL+9plXtaK7JQD//r8+ycSqYSbXjv1yMuF+RMf8ykUCIK1XgWpMYNea
        zZvvHB4b57Y71Od0TQD+5mu7OHpydiidTt6rU33KpUTSnl6A63mrUumhe08ffTu9f99bWtHdEIAfvHCM
        TDrJ2Ej6PQnP3alV1ShmkdfKuUtrWxsInI+XSN45tmby3anhEf7u+y9os2oTNfcClPI+wyMp3LJ7p+OY
        NVpVDSAWE2RBakTFjIMkxsA4K+J229UDAHAcZ0MylbrTS6ZeiLJZbVudFoDxdUO8/MqRoWt2bLxVl/c2
        gsEEWVKv/A9MZQYurTMRJLWayvVfQJKraZ/pdAYBrBWE9vRrjOPgJZI3H9z/T8mJDZt9bV8dFoDRkTSZ
        THLcGH5Wq6lRq7CYygymcnZBAZj7zIq4VWhqBWBD1xB745otW8cTieRpbVwdFoCR0Qwi4iY8N63VtASM
        qRr/JQJguFwU+lkAJN4L0M47cr3EqpGxiaRxVsaQqa8EIOk51fas3X/lcqy0vwfgup6bHho2Kyl42jcC
        oON+pR6RFWybl+oax8FV799WtHaVpRsm4EdxL0BRAVAGDAGCUNC9OioAyhyGxub3jdP3Q1oRqET9PpGp
        qAC0xPANIJjyGdzpn0BUrv3ZqIw7/RNM+SwgfTsrEAkEoYbmVgKeVsGyLR+wOPnDuKf24p7dj1M+DdZn
        YdMwmLBI8uBj2Mw6oombiNbdhh3ZSqzD/eNPg0gINQCgAjC4tm8w/jm840/jnXgaUz4V94tNA+v9bQUn
        /w5O4Qje6X8i3HAn4ca7kOQ4/TKoLgcaAFQBGFzrx8m/TWLqf+POvAg2mrf4p7Hvz33WlE6TePvvcLIH
        Cbb9a+zoFT0vAlagHLZvCbCiAtDbxp89QPLgYzi5Q9WAXhNmYAyIxT37PMafxd/xSezYNfTycCCyQiUU
        Nf4VggYBl2CsTn6K5MFvXjD+lpXt4OQOxcKSf6ung4PlgJamAFNUAPrB+jGVWRJTe3ByUw0av1zyakQE
        pkhM7cFUZunFDrYAxUB0/K8CMGBIhHfsH3FnXl7c+MXG+/69ESQ5Eb+8kfh7i+0ENA7uzEt4x78PEvVc
        NYQRlAPt/q8kNAawGMbgZKfwTjwDWGp7ZgGTwI7vIFx7C3b0SiS5Ki7Cn8HJTeGefR43ewBsUKcci3fi
        GaKJm7BjV/VUULAUCGHv6ZKiAtBGbIR36oeYynSdsbkgyQmCd/0K0eQvIMmx85oAIJlJ7Pg1RJM7cU8+
        S+LIdzH+LDXXC1TO4p36If7Itp7JHiQCRV909Z8KwABhDE7pFO7MT+qZBpKcwN9xD9HaW2KjvtRrzwlB
        YpRwyweQ1ATJNx+vLQJCvGJw0/uRzAZ6YVagEgqlQM2/Fo9++ztL+vy9H/+wCkA/4GTfiJfu1vL+JkHw
        rn9VNX4WMdZ49jxa916CyjTJt/aADRcUHlM+i5t9g3BoQ0/MChZ90ej/4rjAZPV9ISLgVPVdBaDnsTae
        8rM+mAWeqVjs+A6iyZ3EnrxRS3WI1t9BNP1C7cCi9eNrr58ru3uEFgqala8RJoEngM3EAaOLHzocBe4G
        jqsA9DwGY0uY0onaBuh4hGtvicf8SwrWCZIcJVpzM+6512p+15ROYKIy4g7RzW5A0Rf8ULv/DeBWjX/T
        Ip/pGXQasB42qI7Taxixm8GOXrn84ke3I26mOj0ol71MZaY6Y9A9Igu5sgb/lvJYl/m7rqA9gHpIhInK
        tcf/TrK6iWc5ZROvEUhPgpNaOIuwl+n6NGApEMrq/VcsKgCLYpr8fW0FkNQElRt+d5GDREbpVvffStX7
        q/2rAAym7buIm8ZIjeQd1sf4s0hmcnk2apzqISH1haJbFH2hqFN/KgADi5OoruZ7eyHrxUQlnNwh7PjV
        TVykNw0ssnCuNDjev1/n8VUA2oYgbrq6EKfGQiAb4p59nmj9TsTrXle9HRR8oTx43r/v5vFVANqJcbCj
        28FJLLw5xzi42QO4J54l3PIBVkqKjHDO+w/eE++7eXwVgDYTjf0Mkl6DKZ6sEQcISBz5LpKaIFr3Xvot
        v99CnCtZKoMZ+e+7efxm0XUA9RBB0pNEq2+s8yGD8WdJvvk43pHvYYLchRRh53MENpArsEcoBUK2PNCB
        v76ax28W7QEshuMSTu7EPfNjjD9NzR18/izJt/YQTe8nWvPz8SKf5Kp4+GDcOKDopi8s++3B6JqVuOuv
        a/4HBxWAxRDBjl5JuOEOEoefpHb33sRBwZlXcM+9Hi/fdZLgeHEwMbkKyWzAjm6vDismwXF7SghyZaHg
        67SfCoByiW27hBvfh5N9E3fmpfp79I0DIpgwf+G/RIinEn8S9wTSa4hW30g4uTNeSmxcuh03KIfCbMnq
        oh8VAOVyBElPEGzfhQnO4eQPN5CoY95QYX7wUCJM8SRe8R9xz/yYcMMdhJveh6QmutYbsAIzRSHQbD8D
        hwYBG9YAwY5eRXDVPfFpPtLEQLkaIDT+NInDT5J8/es42TfpVqDwXEkoVtT1qwAoi6kA0arr8K/+LNHq
        n2VpOQAWVAJAcGdeInngL3FnX+24CBT8atdfH64KgNKYCNixq/Df/VsEWz+EJKtd92a678bByR8m8eZj
        OLk3O3YugB/BdEGj/ioAyhI1oJoE9IqPUbn+84Sb348MbQDjxUODuddSzwXIHyY5tSdOQNrmnoC1MF0Y
        2AU/ShUNAi5fBeKlwmM78Ee2Y8qncbNv4OQPYYonMP5snEvAhvGuwagU/7zIDIIz+yrese8TXPGxtmUE
        FoGZkqWg434VAK2CFliTcZDMhmoCz51Vww/i/QM2XMa5AM8STdyMHd/RlpmBbFkGda2/ogLQNiWo9vRN
        vAho3orxpZ8LMB2fCzC6veW9gEJFmC5aPd5LATQG0D4xmP+qBgnnzgXwr/pkNc9AbSt0Z17ElE/TylhA
        KRDOFKwG/RQVgO4JQ/VcgC2/Eu8TWIh55wK0yv7LgXAmr4t9FBWAnqj2aP0dRGNX115QZH2c/KHmFhxV
        qYSx8WvEX1EB6AkunAuAU3t7uSnG5wI00w3wIziT18y+igrAMjGLvJZPfC5A7UM/jD/b1LkAfiiczlk9
        0693bKrn7E1nAeohFhNkF0nbPbbsSP35fAELlm1i7y/LG7RXQuF03lLu7rkig0ZEnDYMaqcU66kojApA
        TQwmyJF69c8WPhxUBEmOU7n+80hqHb2UBqwcCKfzQiXUp9hhThHnDFwsqagKQL+IAGEJUzlzuZcXAVvB
        VKaR9Lpl2X/dLr5INYPQ0lLQFf044OdH2u3vAhF9ljBUBaAebgJJrYbCO1w23q920Z3cFHb8mmUV7+Sm
        MGGRWrGEukOESz8L5MvC2YIl1Hn+jtOv5wRoELCOSYmTRjIbqeneq+cCmCDH0gKCBuNncc/+uO4YXzIb
        4l7AIt0LKzBbjMf8avyKCkDLamfuXIBkDTu+cC5AHPNpVAQs3skfVBf61HgETrKaLqz+IwotnClYXd6r
        qAC0gziB59ram3JsQOKd7+Ke3teACFQTgJzeh3fku/XH/+k1RGM/U9f5V0LhVM6SHaAjvJTWojGAesw7
        F8Arnqhp1CaYJXnwMYLKNNH6O5Dk6MKf9HN4J5/Fq7sZKP7vaPV74uDiAgogQL4izBQsvi7tVVQA2ojj
        Eq7fiXv2uTqJOgwmOLfwuQCAqczi5A9VtwO/sch2YEFSawjX71wwbXh8bJflXEm0y6+oALQdEezIdsIN
        v0Ti7SdY2rkA1Qi+DeJov0TVMX29YYJDuOGXsCPbLzP+ciBMF/TIbkUFoLPMnQuQO4R79oUlnwtwXiAW
        WzEolmjNzxFu/JfVz8aGbm2cxGO2pFF+RQWgCwiSWkWwbRfGP4eTm1rauQANXcJiR68k2LYLSa067/1L
        gTBbFIq+ZvDpEH21ll8FoGMaINjRbfg7PkXy4GM4uUOty9ZTNX5/xz3Y0W0gQlj1+ln1+p2k79byqwB0
        WgTGrsa/5jdJTO3BnXkRbLT8NN4i4LhEa24i2Par2JErsDY+n+9cSSjrWL/T9N1afhWAzqsAdmQr/jW/
        iXf8KbwTT2PKp6rJQRvZIiznPyuZScINdxJuvAubGKPix9H9gq8R/i7Rd2v5m6Vmaz1dsgBbgL3Vd+Wy
        qrM4hSO4p/biTu/HKZ0C69f/mpPEZiaJJn6OaPI27PBW/MghW4rIV0S7+xdzBLgdOHL71sSg10Vb0B7A
        sonz+9mRrdjhLYSb3oc78zKJQ/8LExa4XFsF8YYJrvx1otU3IKnVBNYhV7DkKqHm6lO6gi4FbloHYiGQ
        9BqiiRvBTdf+rJsmmriRireG6QIcnw2ZLlo1fqVraA+gZULAogk8rcB0ISIrlkBzcys9gPYAOoi1Qrak
        yToUFYDBxXT6AHBFUQHoiGHr1J3Sb2gMoEmsgB8JpQCCgmWL1UpVVoAAnCkIIoLnGNIJSLoG15lLaTGY
        zN27lTjnfimAYiD4oRBZQyIQRCxGBLk0haDMPy9QaTd737k42crt72rtOoK9h4OLGkWr1ynsffuSv/+K
        9qyDqCkAM0ULAsYIjoGEa8gkIJ0wpDxwHYMzIINZkXgffiWMl+dWwtjrXxrIF+MQeqvnycVFvyX0ViM6
        6uokDgaDEO19J2iZCOx9O5jT8UT1fJig5eXHTcbFxD6nXRVUUwDMvDZsJW78lRBMWXAdSLmGVFUMku4F
        QejnHsJ8Dx9ZwY+IjT2Mz9ULLXVSbwmRN8bUuz6PWTA1mCA4RN5YH9dQHxFX8VqEj2L4FpBvhZHO88xD
        GL5QNdKvAsUWlz+Mw78FnqCN+w+WPFwVgTCCMIrXrDsGHANJz5B0L7x7jsFxOC8K9FCzn//3WIlfYRQb
        vB8JftXDWxv/Tmgsci/M7wHUb5lKR0gBv4uwBcMfNmuk84wzg+EBYDdgEDwMf9Ti8ncDHwe+184Kajpe
        dd6AfKEAOAjGxD0Cz4WEEw8fPAc8FzwHHGMwVWEwl0yLNWsel5YlcuF9zrMHtipiNj4uO4ji/xdZOK3n
        0kY6auA9hABDwJcQbDNGuoBxPgDMLfv8UtVLtLr8s+1uUC0NWJt5Rmej2LjiYy/kvKE7VXFwHXANuA44
        jsGt9iQcE4uC41yYozTV8cjcrtu4Gy4XGfecgc9/RTYep0dC/G7lvEeXGp5d5+hXHBZINmOkNYwzM+8j
        6TaUn6KNY/+2CEAtUWCewVmJPS/zpM1Uf5rfG7h0i/3lI+pL/i0XX+fi8uv/bcpAsCwjbcD4O1V+W+hq
        SPrS3fNykfe++BVe8rr093PfkzrlKyoCVSP9PeKhwWXThU0aZ7vLX1kCoCi9KgJNGGe7y1cBUJR2ikAL
        jLPd5bcMXbWqDLoIXDRmnxd2a9Y4211+S9AegKIiMM9Tt9g4211+09TuARgNnykDJQLg8BAgLTbOdpff
        HgGoFAvaNJRBEoH7sXjVddxfaLFxtrv81gvA/me+1wt/n6J0igxwf/XnRB+W31oB0B6AMoAk+rz81gmA
        xgAUZeWjswCKogKgKIoKgKIoKgCKoqgAKIoy4AJggUCrSekSAR1IiqECUJsQyGs1KV0iX22DSqcFwGAw
        xpSB41pNSpc4hlDWNIvto+ZCIHEAz8njRweA92tVKV3gACH5Tm1aN8SJa9u1BE6Ik9H2kp7VrNrMcIpS
        tmwx5scgAT24jFFZ0fjAcySwq06f7IwxuHDNWpek2x4J8CPhp2cigqgPBMAvB1UplB8Ch4GrtE0qHeQd
        I/xIDOTHV3fkgob4CLyk274r9NoC+5oxgC/9h3vio8EimQL+Qduj0mG+J5a3ELj//t/S2ui0AAAw4iKe
        CYFvocFApXMcw/A4HqGMuFob3RIAcyYADLjuPuBR9Ngbpf0I8KhreM4IOGd0GUrXBGD37s/gBwEShpGB
        R4CntMqUNvN/Ef4ijCTyg4Dduz+jNdItAQD4gy/8BumEQTBHgS8DL2u1KW3iFUT+E3B0KJXg97/4Wa2R
        bguAMQY/FFxHCCK7z8B9KgJKG3gZ+G3rePschLIfYjqclEaong4d0aaX9NwYuuEa/uM/fxRj4mO5jOG9
        iPwh8C/Q07eU5u3uKeDLfhjtS3seIpbdn/93TRW693AAsAXYW31vyBh6bCHQEeB24MjtW9uzDKfh3YAP
        /Pa9WCs4WBDZB3wKeAg4pm1YWSbHga8YzD0G9qW9BGCaNv5mDDRom/ePy+61HsCStgPvvu/TYAxDmQQi
        ctQz7n8GPkYcIHwT3TmoLI5fbSuPYPgojvMHVuxR1ySxIjxw36e0hjrIsno7IsJ/+9pfkUwmQMBK5Bnj
        bgf5BeDngauBTcAI/bWE2HUcZ9JAT04+C0TW2lNADy0mXZSAeFffMeAA8JwRfhS59i3XuqEAQRDw+1/8
        jZaO+ZczBOhB2j4EaKrGH3zkEVZX1lH08vEiR2PwwsAJHW8EQ5p4qXFfJB2xInZ0eGjzUCb9BIaNPflH
        CseLpfLduULxqGNMvyRzsRhCEcrGJ0/KWCOCNcJQNMpM4hQPfu5zLb+oCkBjNLXPav6D++pXv87Q7Dly
        69ZaDFkg2081PTYyzNjoENZKL3vXaHxs+Kgx5li+UOyfypULrW3VqRPkx1ezW5f39gQt22jZ7+u1H/32
        d7BWet6rWivOyHCG//iZX9PWqzSN5gRUFBUARVFUABRFGSg8rQKlH3n029+p+/uz7xxkcvu7bRT204zp
        JRhIJFx78MXn+aOHv1H3o79336dVAJSBwwUmWWDdxsmpV6210eZVG7a6pk8Puo2iyJ2aOrD50Cv78RLJ
        hXrrEdDUuhAVAKWfmQSeADZzyfkBrpdg5tiUmz19dLLvtqsYCPyQc7n8ZKVUfMJLJBcycAc4CtxNE8l6
        VACUfsatGv+mhX4pIoR+hf7KY2OIoohz2TwVP3CNMRsbqINlowKg9DsNnBzUPz0AESFfKOEHDW2HbvrU
        JJ0FUJReMX6gUCxTrlQ6dk0VAEXpEUqlMoViCengiEUFQFF6gHLFJ18oIdLZeIUKgKJ0mYofkMsXsLbz
        ByGrAChKF/H9gFyuQBR15xR0FQBF6ZbxBwHZfIEw6t5qRZ0GVJRuGL9fNf4uL1VWAVCUDlPxfXK5Ylc9
        vwqAonSBcsUnl+/emF8FQFG6gAiUymXyhVJXov0qAIrSNeMXCsUShWK54/P8KgCK0kWiyJIvFCmVKz35
        96kAKEqb8IOAfL6IH4Q9+zeqAChKixERyuUK+WKpZ4J9KgCK0gGiKCJfLFMuV3puvK8CoCjtQqDs+xQK
        JYKwd7v8KgCK0mKiKIr38Zcr2D7w+ioAitICRIRyxadQLHV9Sa8KgKJ0zPDjE42LpTIVP+iLsf5ACsCD
        D3+LG90THLBrWSzNSr5QYmx0yFrb2w/TcYzN5oqL5olHIHpXCu+NErt3f0attkUEYUipVKFcqdDrbWVg
        BeDBr3+d0UKGAJ83ojWIYxwjsgpIU2MLdDZfsCKyeSiTdns2h6Tg5vLlzblCkTrHg1ugTCSz7pGKJePw
        1f/+DfIT8OCnP92jN9b7hGFEqRwbfq9P7Q20ADz08Df5N/vz/PW1FoOkBPPPjbUfBm4BNgILHrTuGEOh
        WHJL5cpk79o/k9baJxxj6g04A+AYnnkO4Ts4/DDyTGX6zDR/8qff5Eu/8ym15sbrmzAMKZf9FWf4K1IA
        HvzGN9jx8mH++rrNgGwWnN3ArwMTjZbRSxs1FsAlFrHF2A7sxPAJER7D8Mcb0qtP/P21P+JrX9vDF7+4
        S627XhsQIQgCymWfih/0eptQAZhjZBoObd2CxAdF/DnwkQFvy2uA3wG2ONbc98FXbztRSs6ohdcgjCJ8
        P6Bc8QmCsK+De42yYlKCPfjwtwgTgJEUsFuN/zwG5Fcx8oCBpGuTfOUr/1NrpUpkLeWKz7lcnpnZHNlc
        Ab/PI/sDKQA3uicwgGB2Ap/Qpn2pCPAJgdswEN4wuLO/IkIYxQG9c7kCM7NZzmXzlEoVoh7I0NNpVkxL
        OGDXxtF+a+9mCWP+AWId8FGR8Afum+7KHdQuYPDWCmEUEgQRQRgShiHWWgbEyQ+GACBQneq7RR9rTW4x
        xh1HzIoLBIgIIvF7ZCPCMCKK4vcwirBWBqZbP5gCEJ8Am6axKPmgshExGaDvBaBQLAGm6uEtkbXY8y81
        9gEUACCOaST0sdYkyQqJ++TyRX2aLTIYRVFUABRFUQFQFEUFQFEUFQBFUVYwNWcBPvTJL/fVjbxz7Czb
        t07afs3M0rEH7rl26vCpvnu++rybe55PPv7Q0gSgigtMVt97mkOHT1trZfOGyXHX9OyG/u4iiPv2kTOb
        3zpyBs91+rr3p8+7oecZAaeq78sSgEngCWAzcaKJnsVzHY6emHZPnclOqv3XbDGTQRg+4blO37tNfd6L
        Pk8HOArcDRxfrgC4VePf1Bf1IfT0KSw9QKP5BPqj/evzbuR51u29N9INHJiNI4qywljUdnUWQFEGGBUA
        RVEBUBRFBUBRFBUARVFUABRFUQFQFEUFQFEUFQBFUVQAFEVRAVAUpZ9pe1ZgTc/c3xjT7Fa7Zp+/Xr9v
        BcBxHEZHh3EcpwUVsTCRZWBPeDEG3Lb14QzWWnK5wvJPxzUGmxhpohELTlBY/gMe9Ot3UwBEhNHRYe77
        3CdZvWq0LfcgCKfzQqEimAHbEy4CwynDuhFDOxJiGAMzszkefuRxZmezy+gJCDYxQuHaXdjkyLL+BsfP
        M/zaHhw/twwjGvTrd1kAIO4BrF41ysTEeFsEwADpEeFk1mIHrBfgGFg/5jCSNG3pW83Zu9NU4iCDTY5g
        U+NL92LnBcfo9dtIm2MAc+e1tScWIEDai18Ff7AUIJ0wpD2wbesemmqbbUH5Iksvp5W3NejXr0PfzwI4
        BsYyBmeAhgCDeM+KCkBNMglDJjE41jBo96uoANS/iQHyiOr9FRWABRgUr6jeX1EBWOhGBsAzqvdXVADq
        sNK9o3p/RQWg3s2sYA+p3l9RAWiAleol1fsrKgCN3NAK9JTq/RUVgCWw0rylen9FBWApN7WCPKZ6f6Wd
        eCv1xua8Zt6Xvj08Vlgh3t+Ypa9tb+X2zkG//iAKwJzn9CPp23wBpu+9v+D4+eU/Qz9Pc7tiBv36AywA
        AENJw+ZVbl/fg9u3gzSDExQYfm0PTSfEWNb3B/36KgAYwNOsh91DpJrMotmnqNdXAVD6lG6PXwb9+vVR
        /6goA4wKgKKoACiKogKgKIoKgKIoKgCKoqgAKIqiAqAoigqAoigqAIqiqAAoitLP6F4ApcUM6FntHaO1
        ewtUAJQWtk2DTYzQ6xtg+pfq9uAWJrhQAVBa1jhtYoTCtbuwyRGtjjbg+HmGX9tT3WLcGpFVAVBaiMEm
        R7Cpcfo2DVPPVq05X8etRAVAaT0iaCyg1XXanmJ1FkBRBhgVAEVRAVAUZRBpcwzAYMxc/EKnhvqJpp7b
        cvLgK4vXab8JgLWWmdk4K6oGhfuvvc3M5rDWLuFbzeXBV+rTjnMC2iYAxhhyuQIPP/I4juOgLqHvJABr
        LblcAdOQ92lFHnylPq0/J6DtPYDZ2aw+t36WgaV0PVuSB19Z5Im0tLS2rwMwRr2BNlClV9FZAEVRAVAU
        RQVAURQVAEVRVAAURVEBUBRFBUBRFBUARVFUABRFUQFQFEUFQFGUFSsAKhKKskLte7HNQBFwtPqz7fvq
        UJTBMv6jVRtetgCcAu4GXK1PRek7oqoNL1sAIuC41qOiKIqiKIqiKIqiKIqiKIqiKIqi9BP/H4uk0NVl
        nJMZAAAAAElFTkSuQmCC
</value>
  </data>
</root>